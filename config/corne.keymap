#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#include "includes/behaviors.dtsi"
#include "includes/combos.dtsi"
#include "includes/macros.dtsi"
#include "keys/36.h"

// layers
#define DEF 0
#define SYM 1

// Layer switching
#define CL2 &mt LCTRL ESC //   tap for tab : hold for shift
#define CL1 &mt LGUI TAB //  zero here because key-repeat does not take arguments
#define CL0 &mt SHIFT BSPC // tap for sticky shift : hold for media layer

#define CR0 &mt SHIFT SPACE
#define CR1 &mt LGUI ENTER // tap gives you backspace : long tap gives you delete word
#define CR2 &lt 1 ESC //  tap for sticky ctrl : hold for function layer

// shorter codes
#define BPSTE &kp K_PASTE
#define BCPY &kp K_COPY
#define BCUT &kp K_CUT
#define BUNDO &kp K_UNDO
#define BREDO &kp K_REDO
#define BPREV &kp K_PREV
#define BNEXT &kp K_NEXT
#define BPLYPSE &kp K_PP
#define BMUTE &kp K_MUTE
#define BSTOP &kp K_STOP2
#define BVOLD &kp K_VOL_DN
#define BVOLU &kp K_VOL_UP
#define OUTTOG &out OUT_TOG // toggle keyboard output bluetooth/usb
#define ___ &trans          //  transparent
#define _x_ &none

// Home row mods
// #define HRML(k1, k2, k3, k4) &hml LSHFT k1 &hml LCTRL k2 &hml LALT k3 &hml LGUI k4
// #define HRMR(k1, k2, k3, k4) &hmr RGUI k1 &hmr RALT k2 &hmr RCTRL k3 &hmr RSHFT k4

/ {
  chosen {
		zmk,matrix_transform = &five_column_transform;
	};
};

/ {
    behaviors {
        com_col: com_col {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp KP_COMMA>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};

/ {
  keymap {
    compatible = "zmk,keymap";
    qwerty { // layer 0 (default)
      bindings = <
      // ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
			// │    Q    │    W    │    E    │    R    │    T    │   │    Y    │    U    │    I    │    O    │    P    │
					&kp Q     &kp W     &kp E     &kp R     &kp T         &kp Y     &kp U     &kp I     &kp O     &kp P
			// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
			// │    A    │    S    │    D    │    F    │    G    │   │    H    │    J    │    K    │    L    │    '    │
					&kp A     &kp S     &kp D     &kp F     &kp G         &kp H     &kp J     &kp K     &kp L     &kp SQT
			// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
			// │    Z    │    X    │    C    │    V    │    B    │   │    N    │    M    │   ,/;   │   ./:   │    /    │
					&kp Z     &kp X     &kp C     &kp V     &kp B        &kp N     &kp M   		&com_col &kp KP_DOT &kp KP_SLASH
			// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
															&CL2  			&CL1  			&CL0      			&CR0  			&CR1  		&CR2
			//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
          >;
    };
    symbols { // layer 1
      bindings = <
      // ╭─────────────────────────────────────────────────╮   ╭─────────────────────────────────────────────────╮
			// │    Q    │    W    │    E    │    R    │    T    │   │    {    │    }    │    I    │    O    │    P    │
					&kp Q     &kp W     &kp E     &kp R     &kp T         &kp Y     &kp U     &kp I     &kp O     &kp P
			// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
			// │    A    │    S    │    D    │    F    │    G    │   │    (    │    )    │    K    │    L    │    '    │
					&kp A     &kp S     &kp D     &kp F     &kp G        &kp LPAR  &kp RPAR   &kp K     &kp L     &kp SQT
			// ├─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────┤
			// │    Z    │    X    │    C    │    V    │    B    │   │    N    │    M    │   ,     │   .     │    /    │
					&kp Z     &kp X     &kp C     &kp V     &kp B        &kp N     &kp M   &kp KP_COMMA &kp KP_DOT &kp KP_SLASH
			// ╰─────────┼─────────┼─────────┼─────────┼─────────┤   ├─────────┼─────────┼─────────┼─────────┼─────────╯
															&CL2  			&CL1  			&CL0      			&CR0  			&CR1  		&CR2
			//                     ╰─────────────────────────────╯   ╰─────────────────────────────╯
          >;
    };
  };
};
