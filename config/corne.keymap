/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define COL 0
#define NAV 1
#define SYM 2
#define NUM 3

// Controls Alias
#define CL2 &mt LCTRL ESC
#define CL1 &mt LALT  BACKSPACE
#define CL0 &mt LGUI  TAB

#define CR0 &mt RGUI        SPACE
#define CR1 &mt RIGHT_SHIFT RETURN
#define CR2 &mt RCTRL       ESC

// Arrow keys
#define LTAW &kp LEFT_ARROW
#define DNAW &kp DOWN_ARROW
#define UPAW &kp UP_ARROW
#define RTAW &kp RIGHT_ARROW

&mt {
    tapping-term-ms = <400>;
    quick-tap-ms = <175>;
    require-prior-idle-ms = <150>;
    flavor = "balanced";
};

&lt {
    tapping-term-ms = <400>;
};

/ {
    combos {
        compatible = "zmk,combos";

        toggle_colemak {
            timeout-ms = <50>;
            bindings = <&tog COL>;
            key-positions = <14 15>;
        };

        toggle_nav {
            timeout-ms = <50>;
            bindings = <&tog NAV>;
            key-positions = <15 16>;
        };

        toggle_sym {
            timeout-ms = <50>;
            bindings = <&mo SYM>;
            key-positions = <3 4>;
        };

        toggle_nums {
            timeout-ms = <50>;
            bindings = <&mo NUM>;
            key-positions = <2 3>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };

    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            bindings = <
            &none               &kp Q               &kp W                       &kp F                   &kp P                   &kp B               &kp J   &kp L   &kp U       &kp Y       &kp SEMICOLON   &none
            &none               &kp A               &kp R                       &kp S                   &kp T                   &kp G               &kp M   &kp N   &kp E       &kp I       &kp O           &none
            &none               &kp X               &kp C                       &kp D                   &kp V                   &kp Z               &kp K   &kp K   &kp COMMA   &kp DOT     &kp FSLH        &none
            CL2                 CL1                 CL0                         CR0                     CR1                     CR2
            >;
        };

        nav_layer {
            bindings = <
            &none                   &kp LG(Q)           &kp LG(W)                   &none                   &none                   &none           &none       &kp N0  &kp C_VOL_DN    &kp C_VOL_UP        &kp LG(P)   &none
            &none                   &kp LG(A)           &kp LG(S)                   &none                   &none                   &none           &none       LTAW    DNAW            UPAW                RTAW        &none
            &none                   &kp LG(Z)           &kp LG(X)                   &mt LC(C) LG(C)         &kp LG(V)               &kp LG(B)       &none       &kp LT  &kp GT          &kp TILDE           &kp CARET   &none
            CL2                     CL1                 CL0                         CR0                     CR1                     CR2
            >;
        };

        sym_layer {
            bindings = <
            &none       &none       &none       &none       &none       &none       &kp QMARK       &kp LBRC        &kp RBRC        &kp AMPS        &kp PIPE        &none
            &none       &none       &none       &none       &none       &none       &kp EQUAL       &mt UNDER LPAR  &kmt MINUS RPAR &kp LBKT        &kp RBKT        &none
            &none       &none       &none       &none       &none       &none       &kp EXCL        &kp LT          &kp GT          &kp TILDE       &kp CARET       &none
            CL2         CL1         CL0         CR0         CR1         CR2
            >;
        };

        nums_layer {
            bindings = <
            &none       &none       &none       &none       &none       &none       &kp MINUS       &kp N7       &kp N8       &kp N9       &kp SLASH    &none
            &none       &none       &none       &none       &none       &none       &kp PLUS        &kp N4       &kp N5       &kp N6       &kp STAR     &none
            &none       &none       &none       &none       &none       &none       &kp N0          &kp N1       &kp N2       &kp N3       &none        &none
            &none       &none       &none       &none       &none       &none
            >;
        };

        // blank_layer {
        //     bindings = <
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none
        //     >;
        // };

         // blank_layer {
        //     bindings = <
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none
        //     >;
        // };

         // blank_layer {
        //     bindings = <
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none       &none
        //     &none       &none       &none       &none       &none       &none
        //     >;
        // };

        // media_layer {
        //     bindings = <
        //     &none  &kp SPACE  &kp UP_ARROW     &kp ENTER       &kp PAGE_UP    &kp C_VOL_UP    &kp C_BRIGHTNESS_INC  &kp F1  &kp F4  &kp F7  &kp F10  &none
        //     &none  &kp LEFT   &kp DOWN         &kp RIGHT       &kp HOME       &kp C_MUTE      &kp C_PLAY_PAUSE      &kp F2  &kp F5  &kp F8  &kp F11  &none
        //     &none  &kp INS    &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAGE_DOWN  &kp C_VOL_DN    &kp C_BRIGHTNESS_DEC  &kp F3  &kp F6  &kp F9  &kp F12  &none
        //     &none           &none          &none           &none                 &none   &none
        //     >;
        // };

        // bt_layer {
        //     bindings = <
        //     &none  &bt BT_CLR    &bt BT_CLR_ALL  &bt BT_PRV    &bt BT_NXT    &none           &none   &none  &none  &none  &none  &none
        //     &none  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none   &none  &none  &none  &none  &none
        //     &none  &bootloader   &sys_reset      &none         &none         &none           &none   &none  &none  &none  &none  &none
        //     &none  &none         &none           &none         &none         &none
        //     >;
        // };
    };
};
